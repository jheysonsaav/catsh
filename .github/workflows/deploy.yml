name: Deploy

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[1-9]+"
      - "v[0-9]+.[0-9]+.[1-9]+-beta.[0-9]+"
      - "v[0-9]+.[0-9]+.[1-9]+-alpha.[0-9]+"

jobs:
  cargo-publish:
    name: Publish cargo package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Publish
        run: |
          cd core
          cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          sleep 20
          cd ../cli
          cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build:
    name: Build release (${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: catsh-x86_64-unknown-linux-gnu.zip

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: catsh-x86_64-unknown-linux-musl.zip

          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
            name: catsh-i686-unknown-linux-gnu.zip

          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            name: catsh-i686-unknown-linux-musl.zip

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: catsh-aarch64-unknown-linux-gnu.zip

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: catsh-aarch64-unknown-linux-musl.zip

          - target: arm-unknown-linux-gnueabihf
            os: ubuntu-latest
            name: catsh-arm-unknown-linux-gnueabihf.zip

          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            name: catsh-arm-unknown-linux-musleabihf.zip

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: catsh-x86_64-apple-darwin.zip

          - target: aarch64-apple-darwin
            os: macOS-latest
            name: catsh-aarch64-apple-darwin.zip

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: catsh-x86_64-pc-windows-msvc.zip

          - target: i686-pc-windows-msvc
            os: windows-latest
            name: catsh-i686-pc-windows-msvc.zip

          - target: aarch64-pc-windows-msvc
            os: windows-latest
            name: catsh-aarch64-pc-windows-msvc.zip

          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
            name: catsh-x86_64-unknown-freebsd.zip

    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Pre-release (build)
        uses: actions-rs/cargo@v1
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Pre-release (windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip catsh.exe
          7z a ../../../${{ matrix.name }} catsh.exe
          cd -

      - name: Pre-release (not windows)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip catsh || true
          zip -9r ../../../${{ matrix.name }} catsh
          cd -

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Github release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Artifacts
        uses: actions/download-artifact@v2

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: catsh-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}