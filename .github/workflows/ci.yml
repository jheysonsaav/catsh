name: Ci

on: [push, pull_request]

jobs:
  check:
    name: Checking on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    steps:
      - name: Install Rustlang v1.51.0
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: 1.51.0

      - uses: actions/checkout@v2

      - name: Versions
        run: |
          rustc --version
          cargo --version

      - name: Install clippy and rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Testing
        run: cargo test

      - name: Checking
        run: cargo check

      - name: Linting
        run: cargo clippy

      - name: Formatting
        run: cargo fmt

      - name: Pre-release (Testing)
        if: startsWith(github.ref, 'refs/tags/v')
        run: cargo test --release

      - name: Pre-release (Checking)
        if: startsWith(github.ref, 'refs/tags/v')
        run: cargo check --release

  build:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: catsh-x86_64-unknown-linux-gnu.zip

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: catsh-x86_64-unknown-linux-musl.zip

          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            name: catsh-i686-unknown-linux-musl.zip

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: catsh-aarch64-unknown-linux-musl.zip

          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            name: catsh-arm-unknown-linux-musleabihf.zip

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: catsh-x86_64-apple-darwin.zip

          - target: aarch64-apple-darwin
            os: macOS-latest
            name: catsh-aarch64-apple-darwin.zip

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: catsh-x86_64-pc-windows-msvc.zip

          - target: i686-pc-windows-msvc
            os: windows-latest
            name: catsh-i686-pc-windows-msvc.zip

          - target: aarch64-pc-windows-msvc
            os: windows-latest
            name: catsh-aarch64-pc-windows-msvc.zip

          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
            name: catsh-x86_64-unknown-freebsd.zip

    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.target }}

      - name: Pre-release (build)
        uses: actions-rs/cargo@v1
        env:
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk
        with:
          command: build
          if: startsWith(github.ref, 'refs/tags/v')
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.os == 'ubuntu-latest' }}

      - name: Pre-release (windows)
        if: |
          startsWith(github.ref, 'refs/tags/v') &&
          matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip catsh.exe
          zip -9r ../../../${{ matrix.name }} catsh.exe
          cd -

      - name: Pre-release (not windows)
        if: |
          startsWith(github.ref, 'refs/tags/v') &&
          matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          strip catsh || true
          zip -9r ../../../${{ matrix.name }} catsh
          cd -

      - name: Release
        uses: softprops/action-gh-release@v1
        if: |
         startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          files: |
            catsh-*.zip
          draft: true

        
      - name: Publish to Cargo
        if: |
          startsWith(github.ref, 'refs/tags/v') &&
          startsWith(matrix.os, 'ubuntu')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cd core
          cargo publish
          sleep 30
          cd ../cli
          cargo publish